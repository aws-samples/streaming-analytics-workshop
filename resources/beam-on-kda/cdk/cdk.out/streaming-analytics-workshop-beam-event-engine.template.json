{
  "Description": "Creates all resources and compiles all artifacts that are required to run the beam workshop (shausma-beam-workshop-ee-2021-10-08)",
  "Resources": {
    "HistoricTripsEF9D049F": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/HistoricTrips/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaServiceRole67452BDD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/EmptyBucket/EmptyBucketLambda/ServiceRole/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "Roles": [
          {
            "Ref": "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/EmptyBucket/EmptyBucketLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "EmptyBucketEmptyBucketLambdaD0E9E93D": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\n\ndef empty_bucket(event, context):\n    bucket_name = os.environ['bucket_name']\n\n    try:\n        if event['RequestType'] == 'Delete':\n            print(\"empty bucket: \" + bucket_name)\n            \n            bucket = boto3.resource('s3').Bucket(bucket_name)\n            bucket.object_versions.delete()\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})"
        },
        "Role": {
          "Fn::GetAtt": [
            "EmptyBucketEmptyBucketLambdaServiceRole67452BDD",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "bucket_name": {
              "Ref": "HistoricTripsEF9D049F"
            }
          }
        },
        "Handler": "index.empty_bucket",
        "MemorySize": 512,
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "EmptyBucketEmptyBucketLambdaServiceRoleDefaultPolicy0872AADF",
        "EmptyBucketEmptyBucketLambdaServiceRole67452BDD"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/EmptyBucket/EmptyBucketLambda/Resource"
      }
    },
    "EmptyBucketEmptyBucketResource78AC492E": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "EmptyBucketEmptyBucketLambdaD0E9E93D",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/EmptyBucket/EmptyBucketResource"
      }
    },
    "Vpc8378EB38": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "streaming-analytics-workshop-beam-event-engine/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/Resource"
      }
    },
    "VpcpublicSubnet1Subnet2BB74ED7": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/17",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet1/Subnet"
      }
    },
    "VpcpublicSubnet1RouteTable15C15F8E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet1/RouteTable"
      }
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet1/RouteTableAssociation"
      }
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet1/DefaultRoute"
      }
    },
    "VpcpublicSubnet2SubnetE34B022A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/17",
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet2/Subnet"
      }
    },
    "VpcpublicSubnet2RouteTableC5A6DF77": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet2/RouteTable"
      }
    },
    "VpcpublicSubnet2RouteTableAssociationCCE257FF": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet2SubnetE34B022A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet2/RouteTableAssociation"
      }
    },
    "VpcpublicSubnet2DefaultRoute732F0BEB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "DependsOn": [
        "VpcVPCGWBF912B6E"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/publicSubnet2/DefaultRoute"
      }
    },
    "VpcIGWD7BA715C": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "streaming-analytics-workshop-beam-event-engine/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/IGW"
      }
    },
    "VpcVPCGWBF912B6E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Vpc8378EB38"
        },
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Vpc/VPCGW"
      }
    },
    "SecurityGroupDD263621": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "streaming-analytics-workshop-beam-event-engine/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:3389",
            "FromPort": 3389,
            "IpProtocol": "tcp",
            "ToPort": 3389
          }
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/SecurityGroup/Resource"
      }
    },
    "SecurityGroupfromstreaminganalyticsworkshopbeameventengineSecurityGroup33B398B8ALLTRAFFIC74503DD4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "-1",
        "Description": "from streaminganalyticsworkshopbeameventengineSecurityGroup33B398B8:ALL TRAFFIC",
        "GroupId": {
          "Fn::GetAtt": [
            "SecurityGroupDD263621",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "SecurityGroupDD263621",
            "GroupId"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/SecurityGroup/from streaminganalyticsworkshopbeameventengineSecurityGroup33B398B8:ALL TRAFFIC"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRole7677047F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy35C1955E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "HistoricTripsEF9D049F",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy35C1955E",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRole7677047F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambda6291C00E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRole7677047F",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "url": "https://github.com/aws-samples/amazon-kinesis-replay/archive/release-0.1.0.zip",
            "bucket": {
              "Ref": "HistoricTripsEF9D049F"
            },
            "key": "sources/amazon-kinesis-replay-release-0.1.0.zip"
          }
        },
        "Handler": "index.download_sources",
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRoleDefaultPolicy35C1955E",
        "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaServiceRole7677047F"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/DownloadLambda/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambdaResourceF936F387": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "Cloud9DevEnvironmentKinesisReplayBuildPipelineDownloadLambda6291C00E",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/DownloadLambdaResource/Default"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProjectRole65736AD5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodebuildProject/Role/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicyBC72076A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProject4A3A65B0"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProject4A3A65B0"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProject4A3A65B0"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProjectRoleDefaultPolicyBC72076A",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProjectRole65736AD5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProject4A3A65B0": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:2.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProjectRole65736AD5",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-replay-release-0.1.0\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-replay-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-replay-release-0.1.0\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodebuildProject/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineWaitHandle0BE76523": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/WaitHandle"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineWaitConditionAC504110": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": 1,
        "Handle": {
          "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineWaitHandle0BE76523"
        },
        "Timeout": "1200"
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/WaitCondition"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRole36013F58": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyF9774EB1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyF9774EB1",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRole36013F58"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambda2EA48A2F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRole36013F58",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "waitHandleUrl": {
              "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineWaitHandle0BE76523"
            }
          }
        },
        "Handler": "index.notify_build_success",
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRoleDefaultPolicyF9774EB1",
        "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambdaServiceRole36013F58"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/NotifyLambda/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRole5BBB6631": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Role/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicy416CFF7B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleBD6C2112",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleB60DC10F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleF7610889",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole561EADEC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicy416CFF7B",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRole5BBB6631"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineA4323C69": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRole5BBB6631",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "S3Bucket": {
                    "Ref": "HistoricTripsEF9D049F"
                  },
                  "S3ObjectKey": "sources/amazon-kinesis-replay-release-0.1.0.zip"
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleBD6C2112",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProject4A3A65B0"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "Name": "BuildAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleB60DC10F",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": {
                    "Ref": "HistoricTripsEF9D049F"
                  },
                  "Extract": "true"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "Name": "CopyAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleF7610889",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambda2EA48A2F"
                  }
                },
                "Name": "InvokeAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole561EADEC",
                    "Arn"
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Copy"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "HistoricTripsEF9D049F"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRoleDefaultPolicy416CFF7B",
        "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineRole5BBB6631"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleBD6C2112": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy0C71C776": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/sources/amazon-kinesis-replay-release-0.1.0.zip"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicy0C71C776",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleBD6C2112"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleB60DC10F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy7203C6FE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodebuildProject4A3A65B0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy7203C6FE",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleB60DC10F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleF7610889": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy88E0827E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy88E0827E",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleF7610889"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole561EADEC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource"
      }
    },
    "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyA1A69E5C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Cloud9DevEnvironmentKinesisReplayBuildPipelineNotifyLambda2EA48A2F",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyA1A69E5C",
        "Roles": [
          {
            "Ref": "Cloud9DevEnvironmentKinesisReplayBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRole561EADEC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/KinesisReplayBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "Cloud9DevEnvironmentCloud9Instance9C4F59C7": {
      "Type": "AWS::Cloud9::EnvironmentEC2",
      "Properties": {
        "InstanceType": "t3.large",
        "Description": "Cloud9 environment for Apache Beam on KDA workshop",
        "Name": {
          "Ref": "AWS::StackName"
        },
        "OwnerArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/TeamRole/MasterKey"
            ]
          ]
        },
        "Repositories": [
          {
            "PathComponent": "/code",
            "RepositoryUrl": "https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer.git"
          }
        ],
        "SubnetId": {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/Cloud9DevEnvironment/Cloud9Instance"
      }
    },
    "BeamConsumerBuildPipelineDownloadLambdaServiceRole2CCBE1F4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/DownloadLambda/ServiceRole/Resource"
      }
    },
    "BeamConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicyDE4E9185": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "HistoricTripsEF9D049F",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicyDE4E9185",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineDownloadLambdaServiceRole2CCBE1F4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/DownloadLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineDownloadLambdaEA743AD1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BeamConsumerBuildPipelineDownloadLambdaServiceRole2CCBE1F4",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "url": "https://github.com/aws-samples/amazon-kinesis-analytics-beam-taxi-consumer/archive/release-0.2.0.zip",
            "bucket": {
              "Ref": "HistoricTripsEF9D049F"
            },
            "key": "sources/amazon-kinesis-analytics-beam-taxi-consumer-release-0.2.0.zip"
          }
        },
        "Handler": "index.download_sources",
        "Runtime": "python3.7",
        "Timeout": 30
      },
      "DependsOn": [
        "BeamConsumerBuildPipelineDownloadLambdaServiceRoleDefaultPolicyDE4E9185",
        "BeamConsumerBuildPipelineDownloadLambdaServiceRole2CCBE1F4"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/DownloadLambda/Resource"
      }
    },
    "BeamConsumerBuildPipelineDownloadLambdaResourceD0EA18C7": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BeamConsumerBuildPipelineDownloadLambdaEA743AD1",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/DownloadLambdaResource/Default"
      }
    },
    "BeamConsumerBuildPipelineCodebuildProjectRole2C6D61FC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodebuildProject/Role/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy9C4B2C5B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BeamConsumerBuildPipelineCodebuildProjectEF3C97D5"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "BeamConsumerBuildPipelineCodebuildProjectEF3C97D5"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "BeamConsumerBuildPipelineCodebuildProjectEF3C97D5"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineCodebuildProjectRoleDefaultPolicy9C4B2C5B",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineCodebuildProjectRole2C6D61FC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodebuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodebuildProjectEF3C97D5": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:2.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "BeamConsumerBuildPipelineCodebuildProjectRole2C6D61FC",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"cd amazon-kinesis-analytics-beam-taxi-consumer-release-0.2.0\",\n        \"mvn clean package -B\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"target/amazon-kinesis-analytics-beam-taxi-consumer-*.jar\"\n    ],\n    \"discard-paths\": false,\n    \"base-directory\": \"amazon-kinesis-analytics-beam-taxi-consumer-release-0.2.0\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodebuildProject/Resource"
      }
    },
    "BeamConsumerBuildPipelineWaitHandleA99BAC22": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/WaitHandle"
      }
    },
    "BeamConsumerBuildPipelineWaitCondition71C56893": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Count": 1,
        "Handle": {
          "Ref": "BeamConsumerBuildPipelineWaitHandleA99BAC22"
        },
        "Timeout": "1200"
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/WaitCondition"
      }
    },
    "BeamConsumerBuildPipelineNotifyLambdaServiceRoleD54054BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/NotifyLambda/ServiceRole/Resource"
      }
    },
    "BeamConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy27D44ED0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy27D44ED0",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineNotifyLambdaServiceRoleD54054BC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/NotifyLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineNotifyLambda60741D43": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport json\nimport boto3\nimport traceback\nimport cfnresponse\nimport urllib.request\n\ns3client = boto3.client('s3')\ncode_pipeline = boto3.client('codepipeline')\n\n\ndef download_sources(event, context):\n    url = os.environ['url']\n    bucket = os.environ['bucket']\n    key = os.environ['key']\n\n    try:\n        if event['RequestType'] != 'Delete':\n            req = urllib.request.Request(url)\n            response = urllib.request.urlopen(req)\n\n            s3client.put_object(Bucket=bucket, Key=key, Body=response.read())\n\n        cfnresponse.send(event, context, cfnresponse.SUCCESS, {})\n    except Exception:\n        traceback.print_exc()\n\n        cfnresponse.send(event, context, cfnresponse.FAILED, {})\n\n\ndef notify_build_success(event, context):\n    job_id = event['CodePipeline.job']['id']\n\n    url = os.environ['waitHandleUrl']\n    headers = { \"Content-Type\": \"\" }\n    data = { \"Status\": \"SUCCESS\", \"Reason\": \"Compilation Succeeded\", \"UniqueId\": job_id, \"Data\": \"Compilation Succeeded\" }\n\n    try:\n        req = urllib.request.Request(url, headers=headers, data=bytes(json.dumps(data), encoding=\"utf-8\"), method='PUT')\n        response = urllib.request.urlopen(req)\n\n        code_pipeline.put_job_success_result(jobId=job_id)\n    except Exception:\n        traceback.print_exc()\n\n        code_pipeline.put_job_failure_result(jobId=job_id, failureDetails={'type': 'JobFailed'})\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "BeamConsumerBuildPipelineNotifyLambdaServiceRoleD54054BC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "waitHandleUrl": {
              "Ref": "BeamConsumerBuildPipelineWaitHandleA99BAC22"
            }
          }
        },
        "Handler": "index.notify_build_success",
        "Runtime": "python3.7",
        "Timeout": 10
      },
      "DependsOn": [
        "BeamConsumerBuildPipelineNotifyLambdaServiceRoleDefaultPolicy27D44ED0",
        "BeamConsumerBuildPipelineNotifyLambdaServiceRoleD54054BC"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/NotifyLambda/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineRole6499E56C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Role/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineRoleDefaultPolicy169CED73": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleFD80B4E0",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole1AEA6EA1",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleE46E5851",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleBB06AD8A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineCodePipelineRoleDefaultPolicy169CED73",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineCodePipelineRole6499E56C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Role/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipeline041D3EFF": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "BeamConsumerBuildPipelineCodePipelineRole6499E56C",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "S3Bucket": {
                    "Ref": "HistoricTripsEF9D049F"
                  },
                  "S3ObjectKey": "sources/amazon-kinesis-analytics-beam-taxi-consumer-release-0.2.0.zip"
                },
                "Name": "SourceAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleFD80B4E0",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "BeamConsumerBuildPipelineCodebuildProjectEF3C97D5"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_SourceAction"
                  }
                ],
                "Name": "BuildAction",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole1AEA6EA1",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "S3",
                  "Version": "1"
                },
                "Configuration": {
                  "BucketName": {
                    "Ref": "HistoricTripsEF9D049F"
                  },
                  "Extract": "true"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_BuildAction"
                  }
                ],
                "Name": "CopyAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleE46E5851",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "BeamConsumerBuildPipelineNotifyLambda60741D43"
                  }
                },
                "Name": "InvokeAction",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "BeamConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleBB06AD8A",
                    "Arn"
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Copy"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "HistoricTripsEF9D049F"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "BeamConsumerBuildPipelineCodePipelineRoleDefaultPolicy169CED73",
        "BeamConsumerBuildPipelineCodePipelineRole6499E56C"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleFD80B4E0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicyC3E3E528": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/sources/amazon-kinesis-analytics-beam-taxi-consumer-release-0.2.0.zip"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleDefaultPolicyC3E3E528",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineCodePipelineSourceSourceActionCodePipelineActionRoleFD80B4E0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Source/SourceAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole1AEA6EA1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyD4299506": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamConsumerBuildPipelineCodebuildProjectEF3C97D5",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRoleDefaultPolicyD4299506",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineCodePipelineBuildBuildActionCodePipelineActionRole1AEA6EA1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleE46E5851": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy562DBD6F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleDefaultPolicy562DBD6F",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineCodePipelineCopyCopyActionCodePipelineActionRoleE46E5851"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Copy/CopyAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleBB06AD8A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/Resource"
      }
    },
    "BeamConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyBA676462": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BeamConsumerBuildPipelineNotifyLambda60741D43",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BeamConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleDefaultPolicyBA676462",
        "Roles": [
          {
            "Ref": "BeamConsumerBuildPipelineCodePipelineCopyInvokeActionCodePipelineActionRoleBB06AD8A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamConsumerBuildPipeline/CodePipeline/Copy/InvokeAction/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "EnrichEventsLambdaServiceRoleD32248A6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/EnrichEventsLambda/ServiceRole/Resource"
      }
    },
    "EnrichEventsLambda23B68032": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "'use strict';\nconsole.log('Loading function');\n\nexports.handler = (event, context, callback) => {\n    /* Process the list of records and transform them */\n    const output = event.records.map((record) => ({\n        recordId: record.recordId,\n        result: 'Ok',\n        data: enrichPayload(record),\n    }));\n    \n    console.log(`Processing completed.  Successful records ${output.length}.`);\n    \n    callback(null, { records: output });\n};\n\n\nfunction enrichPayload(record) {\n    const payload = JSON.parse(Buffer.from(record.data, 'base64').toString('utf8'));\n    const timestamp = new Date(record.kinesisRecordMetadata.approximateArrivalTimestamp).toISOString();\n    \n    const enrichedPayload = Object.assign({approximate_arrival_timestamp: timestamp}, payload);\n\n    return Buffer.from(JSON.stringify(enrichedPayload)+\"\\n\").toString('base64');\n}"
        },
        "Role": {
          "Fn::GetAtt": [
            "EnrichEventsLambdaServiceRoleD32248A6",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 60
      },
      "DependsOn": [
        "EnrichEventsLambdaServiceRoleD32248A6"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/EnrichEventsLambda/Resource"
      }
    },
    "TerminateAppLambdaServiceRoleDE1FB187": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/TerminateAppLambda/ServiceRole/Resource"
      }
    },
    "TerminateAppLambdaServiceRoleDefaultPolicy75019B1C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kinesisanalytics:StopApplication",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":kinesisanalytics:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":application/beam-workshop"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TerminateAppLambdaServiceRoleDefaultPolicy75019B1C",
        "Roles": [
          {
            "Ref": "TerminateAppLambdaServiceRoleDE1FB187"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/TerminateAppLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "TerminateAppLambda31DAA5A6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "import os\nimport boto3\n\nclient = boto3.client('kinesisanalyticsv2')\n\ndef empty_bucket(event, context):\n    response = client.stop_application(\n        ApplicationName=os.environ['application_name']\n    )"
        },
        "Role": {
          "Fn::GetAtt": [
            "TerminateAppLambdaServiceRoleDE1FB187",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "application_name": "beam-workshop"
          }
        },
        "Handler": "index.empty_bucket",
        "MemorySize": 512,
        "Runtime": "python3.7",
        "Timeout": 900
      },
      "DependsOn": [
        "TerminateAppLambdaServiceRoleDefaultPolicy75019B1C",
        "TerminateAppLambdaServiceRoleDE1FB187"
      ],
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/TerminateAppLambda/Resource"
      }
    },
    "TerminateAppLambdaAllowInvokestreaminganalyticsworkshopbeameventengineApplicationTerminatedTopicBC584F262E259D0D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TerminateAppLambda31DAA5A6",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "ApplicationTerminatedTopic94FBC4F2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/TerminateAppLambda/AllowInvoke:streaminganalyticsworkshopbeameventengineApplicationTerminatedTopicBC584F26"
      }
    },
    "TerminateAppLambdaApplicationTerminatedTopic1617ADD4": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "ApplicationTerminatedTopic94FBC4F2"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "TerminateAppLambda31DAA5A6",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/TerminateAppLambda/ApplicationTerminatedTopic/Resource"
      }
    },
    "ApplicationTerminatedTopic94FBC4F2": {
      "Type": "AWS::SNS::Topic",
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/ApplicationTerminatedTopic/Resource"
      }
    },
    "KdaRoleB7DD543E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "kinesisanalytics.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/KdaRole/Resource"
      }
    },
    "KdaRoleDefaultPolicy88A47211": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudwatch:PutMetricData",
                "logs:Describe*",
                "logs:PutLogEvents",
                "kinesis:List*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:SubscribeToShard"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "HistoricTripsEF9D049F",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "HistoricTripsEF9D049F",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::nyc-tlc"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::nyc-tlc/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KdaRoleDefaultPolicy88A47211",
        "Roles": [
          {
            "Ref": "KdaRoleB7DD543E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/KdaRole/DefaultPolicy/Resource"
      }
    },
    "BeamWorkshopDashboardC716CE9B": {
      "Type": "AWS::CloudWatch::Dashboard",
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{\"start\":\"-PT30M\",\"widgets\":[{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Number of trips (total)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"metrics\":[[\"Beam\",\"Number of Trips\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}]],\"yAxis\":{},\"liveData\":true}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Number of trips (per borough)\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"stacked\":true,\"metrics\":[[\"Beam\",\"Number of Trips\",\"Borough\",\"Bronx\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Brooklyn\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"EWR\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Queens\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Staten Island\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}],[\"Beam\",\"Number of Trips\",\"Borough\",\"Manhattan\",\"StreamName\",\"beam-workshop\",{\"period\":1,\"stat\":\"Maximum\"}]],\"yAxis\":{},\"liveData\":true}},{\"type\":\"log\",\"width\":24,\"height\":6,\"x\":0,\"y\":12,\"properties\":{\"view\":\"table\",\"title\":\"Flink error log: /aws/kinesis-analytics/beam-workshop\",\"region\":\"",
              {
                "Ref": "AWS::Region"
              },
              "\",\"query\":\"SOURCE '/aws/kinesis-analytics/beam-workshop' | fields @timestamp, @message\\n| filter isPresent(throwableInformation) or @message like /Error/\\n| | filter not(logger like /org.apache.commons.beanutils/)\\n|sort @timestamp desc\"}}]}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/BeamWorkshopDashboard/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31STW/CMAz9LbtnGTAJabcB++K0CqbtnKZmGNq4ipMhFPW/L0nL2Ie0k5/t1+dnN2M5nkzl6OJWHfhSV/uroMmCDGun9F4syLCzXjuxAiZvNYjFxnzHz9613iUUuRU6JNOJpBX4Woa513vI3QH1Ya4YOlGrpqyUDA/e6PRdon3HBdgGmbMiqkaGFdX9/BQLqlEfMy+jTuiafLUh26ikIEPy5NlRc/b7K92YN4Xuy/iTMlX9t9wJ0BMZXludWq/FQhS+jCPXvjT9cme0Iu/gRZW9TF8/12bMpFGdFsyNBJbGgY3MR+XgoI7DmCGbufgrtg0YJ9agvUV3fLTk2zzg38LSvFtgjpehCkqPdSVDgS3UaKCwtAOdPQ+wp7VD/8zMlAEPR76RsXZvPtCSScbuFxPBhuOr8SVri+1pwx/5C7WYT5jBIHVQTm9luFO8LUnZKvW/kq7rhImm5I6vPsZTOR7Fl7pjxEvrjcMG5KqPn4VCsY3GAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "streaming-analytics-workshop-beam-event-engine/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "Cloud9DevEnvironmentReplayJarS3Url9ECA1A84": {
      "Description": "S3 Url for the replay jar file",
      "Value": {
        "Fn::Join": [
          "",
          [
            "s3://",
            {
              "Ref": "HistoricTripsEF9D049F"
            },
            "/target"
          ]
        ]
      },
      "Export": {
        "Name": "ReplayJarS3Url"
      }
    },
    "InputS3Pattern": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "s3://",
            {
              "Ref": "HistoricTripsEF9D049F"
            },
            "/historic-trip-events/*/*/*/*/*"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}